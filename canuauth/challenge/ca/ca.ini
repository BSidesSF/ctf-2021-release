[default]
dir = .

[req]
default_bits = 2048
encrypt_key = yes
default_md = sha256
utf8 = yes
string_mask = utf8only
prompt = no
req_extensions = ca_reqext
x509_extensions = root_ca_ext

[ca_reqext]
keyUsage = critical,keyCertSign,cRLSign
basicConstraints = critical,CA:true
nameConstraints=critical,permitted;DNS:.sj.systemoverlord.com
subjectKeyIdentifier = hash

[ca]
default_ca = root_ca

[root_ca]
certificate             = $dir/ca.crt             # The CA cert
private_key             = $dir/ca.key # CA private key
new_certs_dir           = $dir/                 # Certificate archive
serial                  = $dir/db/serial  # Serial number file
crlnumber               = $dir/db/crl.serial  # CRL number file
database                = $dir/db/ca.db       # Index file
unique_subject          = no                    # Require unique subject
default_days            = 375                  # How long to certify for
default_md              = sha256                  # MD to use
policy                  = match_pol             # Default naming policy
email_in_dn             = no                    # Add email to cert DN
preserve                = no                    # Keep passed DN ordering
name_opt                = ca_default            # Subject DN display options
cert_opt                = ca_default            # Certificate display options
copy_extensions         = none                  # Copy extensions from CSR
x509_extensions         = signing_ca_ext        # Default cert extensions
default_crl_days        = 375                   # How long before next CRL
crl_extensions          = crl_ext               # CRL extensions

[ match_pol ]
domainComponent         = optional                 # Must match 'simple.org'
organizationName        = optional                 # Must match 'Simple Inc'
organizationalUnitName  = optional              # Included if present
commonName              = supplied              # Must be present

[ root_ca_ext ]
keyUsage                = critical,keyCertSign,cRLSign
basicConstraints        = critical,CA:true,pathlen:0
subjectKeyIdentifier    = hash
authorityKeyIdentifier  = keyid:always

[ signing_ca_ext ]
basicConstraints        = critical,CA:false
subjectKeyIdentifier    = hash
authorityKeyIdentifier  = keyid:always
authorityKeyIdentifier = keyid,issuer:always
keyUsage = critical, digitalSignature, keyEncipherment
subjectAltName=${ENV::CERT_SAN}

# CRL extensions exist solely to point to the CA certificate that has issued
# the CRL.

[ crl_ext ]
authorityKeyIdentifier  = keyid:always
